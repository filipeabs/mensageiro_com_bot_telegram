# Use root/example as user/password credentials
version: "3.1"

services:
  app:
    build: .
    env_file: ./.env
    environment:
      HOST_MYSQL: $MYSQL_DB_HOST
      MYSQL_USER: $MYSQL_DB_USER
      MYSQL_PASSWORD: $MYSQL_DB_PASSWORD
      MYSQL_DATABASE: $MYSQL_DB_DATABASE
      PORT_MYSQL: $MYSQL_DOCKER_PORT
      TELEGRAM_BOT_KEY: $MY_TELEGRAM_BOT_KEY
      TELEGRAM_GROUP: $MY_TELEGRAM_GROUP
      HOST_MYSQL_AC: $MYSQL_CONS_HOST
      MYSQL_USER_AC: $MYSQL_CONS_USER
      MYSQL_PASSWORD_AC: $MYSQL_CONS_PASSWORD
      MYSQL_DATABASE_AC: $MYSQL_CONS_DATABASE
      PORT_MYSQL_AC: $MYSQL_DOCKER_PORT
    depends_on:
      - db
      - com
    restart: on-failure

  db:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    env_file: ./.env
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_DB_PASSWORD
      MYSQL_DATABASE: $MYSQL_DB_DATABASE
    volumes: 
      - ./db/initdb:/docker-entrypoint-initdb.d
    ports:
      - $MYSQL_DOCKER_PORT:$MYSQL_DOCKER_PORT

  com:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    env_file: ./.env
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_DB_PASSWORD
      MYSQL_DATABASE: $MYSQL_CONS_DATABASE
      MYSQL_USER: $MYSQL_CONS_USER
      MYSQL_PASSWORD: $MYSQL_CONS_PASSWORD 
    volumes: 
      - ./db/initcom:/docker-entrypoint-initdb.d  
    ports:
      - $MYSQL_LOCAL_PORT:$MYSQL_DOCKER_PORT


